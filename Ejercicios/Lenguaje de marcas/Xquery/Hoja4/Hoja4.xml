<!-- 1. Usando el documento datos.xml genera las expresiones XQuery para obtener la siguiente
información:

a. Obtén el nombre de los proyectos y del proveedor suministrador cuya ciudad sea
    Paris y que reciban una cantidad de partes > 350.
-->
for $proveedores in //datos/proveedores/proveedor[ciudad="Paris"]
for $suministros in //datos/suministros/suministra[numprov=$proveedores/@numprov]
where $suministros/cantidad>350 
for $proyectos in //datos/proyectos/proyecto[numproyecto=$suministros/numproyecto]
return 
<Datos>
    <proyecto>
        {data(@proyecto/nombreproyecto)}
    </proyecto>
    <Proveedor>
        {data($proveedor/nombreprov)}
    </Proveedor>
</Datos>
<!-- 

b. Obtén los nombres de proyecto y nombres del parte que estén en la misma
    ciudad.
-->
for $proyecto in //proyectos/proyecto
let $parte := //partes/parte where $parte/ciudad=$proyecto/ciudad
return 
<Datos>
    <proyecto>
        {data(@proyecto/nombreproyecto)}
    </proyecto>
    <partes>
        {data(@parte/nombreparte)}
    </partes>
</Datos>

<!-- 
c. Obtén todas las ciudades diferentes que aparecen en la base de datos.
-->

for $cidudades in distinct-values(//ciudad)
return 
<Ciudades>
    $ciudades
</Ciudades>
<!-- 
d. Obtén parejas de partes que tengan el mismo color (indicando el nombre de
    ambas partes y el color que comparten). Ten en cuenta que cada parte no debe
    combinarse consigo mismo. Esta consulta es reflexiva, es decir, dos for sobre el
    mismo conjunto de elementos. 
-->
for $parteA in //partes/parte 
for $parteB in //partes/parte
were $parteA ne $parteB and $parteA/color = $parteB/color
return 
<Partes>
    <parteA>{data($parteA/nombreparte)}</parteA>
    <parteB>{data($parteB/nombreparte)}</parteB>
</Partes>

<!-- 
e. Averigua cuantas partes existen cuya ciudad sea «Londres», es decir, el total de
    filas de la «tabla» partes pero teniendo en cuenta la condición de que el «campo»
    ciudad debe ser Londres.
 -->

 count (//partes/parte[ciudad="Londres"])

<!-- 
f. Crea una consulta XQuery que averigüe la media de partes suministradas cuyo
    color sea “Rojo”
 -->

let $Partes_Rojas :=//Partes/parte[//suministra/numparte = @numparte and color='Rojo']
return
if (count($Partes_Rojas) > 0 ) then
 avg($Partes_Rojas/peso)
else
()

<!-- 
g. En el ejercicio anterior hemos calculado la media global de partes rojas. Sin
    embargo, nos interesaría conocer la media de cada parte roja. Es decir, la media
    de p1, la media de p4 y la media de p6.
-->

for $numparte in distinct-values(//partes/parte[color = 'Rojo']/@numparte)
let $Partes_Rojas := //partes/parte[@numparte = $numparte and color = 'Rojo']
return
  <Media>
    <num_parte>{$numparte}</num_parte>
    <media>{avg($partesRojas/peso)}</media>
  </Media>

<!-- 
h. Averigua el nombre de los proyectos (sin que haya repeticiones) que reciban una
    cantidad en la tabla suministra mayor de 650.
-->

distinct-values(//suministra[cantidad > 650]/numproyecto)

<!-- 
2. Realiza las siguientes actualizaciones en la base de datos datos.xml .
    a. Inserta un nuevo suministro al principio de suministros con los siguientes datos.
-->

let $Nuevo_Suministro :=
  <suministra>
    <numprov>v6</numprov>
    <numparte>p7</numparte>
    <numproyecto>y8</numproyecto>
    <cantidad>300</cantidad>
  </suministra>

  return
  insert node $Nuevo_Suministro as first into //suministros

<!-- 
b. Modifica el peso de la parte Tornillo Azul por 23.5. 
-->
let $parte := //partes/parte[nombreparte = 'Tornillo' and color = 'Azul'][1]

return
  replace value of node $parte/peso with 23.5


<!-- 
c. Actualiza un 20% la cantidad suministrada de todas las partes del proyecto
    Monitor. 
-->
for $proyectos in //proyectos/proyecto[nombreproyecto = 'Monitor']/@numproyecto
for $suministros in //suministros/suministra[numproyecto=$proyectos]
return
  replace value of node $suministros/cantidad with $suministros/cantidad * 1.2

<!-- 
3. Crea una consulta XQuery que genere un documento HTML que muestre la siguiente tabla.
 -->

  let $proveedor := 'Adams'
return
  <html>
    <head>
      <title>RELACIÓN DE PESOS POR PROYECTO DEL PROVEEDOR {$proveedor}</title>
    </head>
    <body>
      <h1>RELACIÓN DE PESOS POR PROYECTO DEL PROVEEDOR {$proveedor}</h1>
      <table border="1">
        <tr>
          <th>Proyecto</th>
          <th>Parte</th>
          <th>Cantidad</th>
          <th>Peso</th>
          <th>Total</th>
        </tr>
        {
          for $suministro in //suministros/suministra[//proveedores/proveedor[nombreprov = $proveedor]/@numprov = numprov]
          let $proyecto := //proyectos/proyecto[@numproyecto = $suministro/numproyecto]/nombreproyecto
          let $parte := //partes/parte[@numparte = $suministro/numparte]/nombreparte
          return
            <tr>
              <td>{$proyecto}</td>
              <td>{$parte}</td>
              <td>{data($suministro/cantidad)}</td>
              <td>{data($suministro/parte/peso)}</td>
              <td>{data($suministro/cantidad * $suministro/parte/peso)}</td>
            </tr>
        }
      </table>
    </body>
  </html>